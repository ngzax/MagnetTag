BorderedMorph subclass: #Board	instanceVariableNames: 'cells'	classVariableNames: ''	poolDictionaries: ''	category: 'Zax-MagnetTag'!!Board methodsFor: 'gameLogic' stamp: 'DJR 7/10/2024 17:17'!toggleNeighboursOfCellAt: x at: y	"Toggles neighboring cells, respecting the sides of the Board." 	(x > 1) ifTrue: [ (cells at: x - 1 at: y ) toggleState].	(x < self cellsPerSide) ifTrue: [ (cells at: x + 1 at: y) toggleState].	(y > 1) ifTrue: [ (cells at: x at: y - 1) toggleState].	(y < self cellsPerSide) ifTrue: [ (cells at: x at: y + 1) toggleState].! !!Board methodsFor: 'initialization' stamp: 'DJR 7/10/2024 16:38'!cellsPerSide	"Defines the height and width of the Board in Cells."	^4.! !!Board methodsFor: 'initialization' stamp: 'DJR 7/10/2024 16:34'!initialize	"Set up the default Board"	| cell width height n |	super initialize.	n := self cellsPerSide.		cell := BoardCell new.	width := cell width.	height := cell height.		self bounds: (5@5 extent: ((width*n) @(height*n)) + (2 * self borderWidth)).		cells := Matrix new: n tabulate: [ :i :j | self newCellAt: i at: j ].! !!Board methodsFor: 'initialization' stamp: 'DJR 7/10/2024 17:11'!newCellAt: x at: y	"Places a Cell on the Board. Answers the new cell."	| c origin |	c := BoardCell new.	origin := self innerBounds origin.	self addMorph: c.	c position: ((x - 1) * c width) @ ((y - 1) * c height) + origin.	c mouseAction: [self toggleNeighboursOfCellAt: x at: y].	^c.	! !SimpleSwitchMorph subclass: #BoardCell	instanceVariableNames: 'mouseAction'	classVariableNames: ''	poolDictionaries: ''	category: 'Zax-MagnetTag'!!BoardCell commentStamp: 'DJR 7/10/2024 16:10' prior: 0!An individual Cell where a Player resides.!!BoardCell methodsFor: 'accessing' stamp: 'DJR 7/10/2024 16:57'!mouseAction: aBlock	^mouseAction := aBlock.! !!BoardCell methodsFor: 'event handling' stamp: 'DJR 7/10/2024 17:04'!mouseUp: anEvent	"Perform our defined action on the MouseUp event."	mouseAction value! !!BoardCell methodsFor: 'initialization' stamp: 'DJR 7/10/2024 16:22'!initialize	"Makes a new Cell on the Board."	super initialize.	self label: ''.	self borderWidth: 2.	bounds := 0@0 corner: 256@256.	offColor := Color paleYellow.	onColor := Color paleBlue darker.	self useSquareCorners.	self turnOff.! !Object subclass: #Game	instanceVariableNames: 'board gm inProgress players'	classVariableNames: ''	poolDictionaries: ''	category: 'Zax-MagnetTag'!!Game commentStamp: 'DJR 9/10/2024 17:09' prior: 0!A Game of MagnetTag!!Game methodsFor: 'playing' stamp: 'DJR 8/27/2024 17:38'!play 	"Transcript show: '(move)> '." 	self inProgress: true.	^self.! !!Game methodsFor: 'accessing' stamp: 'DJR 8/27/2024 17:18'!board	^ board! !!Game methodsFor: 'accessing' stamp: 'DJR 8/27/2024 17:18'!board: anObject	board := anObject.! !!Game methodsFor: 'accessing' stamp: 'DJR 8/27/2024 17:18'!gm	^ gm! !!Game methodsFor: 'accessing' stamp: 'DJR 8/27/2024 17:18'!gm: anObject	gm := anObject.! !!Game methodsFor: 'accessing' stamp: 'DJR 8/27/2024 17:31'!inProgress	^ inProgress! !!Game methodsFor: 'accessing' stamp: 'DJR 8/27/2024 17:31'!inProgress: anObject	inProgress := anObject.! !!Game methodsFor: 'accessing' stamp: 'DJR 9/10/2024 17:10'!players	^ players! !!Game methodsFor: 'accessing' stamp: 'DJR 9/10/2024 17:10'!players: anObject	players := anObject.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Game class	instanceVariableNames: ''!!Game class methodsFor: 'instance creation' stamp: 'DJR 9/10/2024 17:11'!manager: aGameMaster	"Answers a new MagnetTag Game managed by the passed GameMaster."	^ self new		gm: aGameMaster;		inProgress: false;		players: MagnetTag players;		yourself.! !Object subclass: #GameMaster	instanceVariableNames: 'game'	classVariableNames: ''	poolDictionaries: ''	category: 'Zax-MagnetTag'!!GameMaster commentStamp: 'DJR 9/9/2024 14:05' prior: 0!The GameMaster controls all Games!!GameMaster methodsFor: 'playing' stamp: 'DJR 9/10/2024 17:08'!startGame	game := Game manager: self.	^game play.! !!GameMaster methodsFor: 'accessing' stamp: 'DJR 7/9/2024 16:29'!game	^ game! !!GameMaster methodsFor: 'accessing' stamp: 'DJR 7/9/2024 16:29'!game: anObject	game := anObject.! !TestCase subclass: #GameMasterTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Zax-MagnetTag'!!GameMasterTest commentStamp: '<historical>' prior: 0!Tests for the MagnetTag Game class.!!GameMasterTest methodsFor: 'testing' stamp: 'DJR 8/27/2024 17:35'!testCanManageAGame	| master game |	master := GameMaster new.	game := master startGame.	self assert: (master game notNil).	self assert: (game inProgress).! !!GameMasterTest methodsFor: 'testing' stamp: 'DJR 9/10/2024 17:18'!testHasStaticPlayers	| master game |	master := GameMaster new.	game := master startGame.	self assert: (game players notEmpty).	self assert: (game players size = 4).! !!GameMasterTest methodsFor: 'running' stamp: 'DJR 7/9/2024 16:18'!setUp"  game := Game new."! !TestCase subclass: #GameTest	instanceVariableNames: 'game'	classVariableNames: ''	poolDictionaries: ''	category: 'Zax-MagnetTag'!!GameTest commentStamp: 'DJR 7/9/2024 11:28' prior: 0!Tests for the MagnetTag Game class.!!GameTest methodsFor: 'testing' stamp: 'DJR 8/27/2024 17:39'!testCanPlayAGame	self assert: (game play inProgress).! !!GameTest methodsFor: 'running' stamp: 'DJR 7/9/2024 11:29'!setUp  game := Game new.! !Object subclass: #MTPlayer	instanceVariableNames: 'name sheet'	classVariableNames: ''	poolDictionaries: ''	category: 'Zax-MagnetTag'!!MTPlayer commentStamp: 'DJR 8/1/2024 15:17' prior: 0!A Person playing MagnetTag!!MTPlayer methodsFor: 'accessing' stamp: 'DJR 8/1/2024 15:21'!name	^ name.! !!MTPlayer methodsFor: 'accessing' stamp: 'DJR 8/1/2024 15:20'!name: anObject	name := anObject.! !!MTPlayer methodsFor: 'accessing' stamp: 'DJR 8/1/2024 15:20'!sheet	^ sheet! !!MTPlayer methodsFor: 'accessing' stamp: 'DJR 8/1/2024 15:20'!sheet: anObject	sheet := anObject.! !!MTPlayer methodsFor: 'converting' stamp: 'DJR 9/10/2024 16:44'!asString	"default format for a player when printed."	^ self name.! !!MTPlayer methodsFor: 'initialize-release' stamp: 'DJR 9/10/2024 15:41'!initialize    self name: 'Undefined'.    self sheet: nil.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MTPlayer class	instanceVariableNames: ''!!MTPlayer class methodsFor: 'instance creation' stamp: 'DJR 8/8/2024 17:18'!named: aNameString	"Answers a new MagnetTag Player with the passed Name."	^ self new		name: aNameString;		yourself.! !WAComponent subclass: #MagnetTag	instanceVariableNames: ''	classVariableNames: 'Players'	poolDictionaries: ''	category: 'Zax-MagnetTag'!!MagnetTag commentStamp: 'DJR 7/29/2024 16:02' prior: 0!This will be the root page for the MagnetTag website.!!MagnetTag methodsFor: 'rendering' stamp: 'DJR 9/10/2024 16:55'!renderContentOn: html	"Render the MagnetTag Home Page."	self class siteHeader: html.	html paragraph: [ 		html 
			render: 'MagnetTag is a game you play against 3 other players on a random, ';
   		     	emphasis: 'unknown '; 			render: 'Board.'.		html unorderedList: [			html listItem: [html anchor url: 'game'; with: ' Play'].			html listItem: [html anchor url: 'players';	with: ' Show All Players'].		].		html break.	].	self class siteFooter: html.! !!MagnetTag methodsFor: 'hooks' stamp: 'DJR 8/8/2024 16:49'!style    ^ 'h1 { text-align: center; }'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MagnetTag class	instanceVariableNames: ''!!MagnetTag class methodsFor: 'accessing' stamp: 'DJR 9/10/2024 16:54'!players	"Answer all the registered Players."	Players isNil ifTrue: [ self createSampleSite ].	^ Players! !!MagnetTag class methodsFor: 'site-layout' stamp: 'DJR 8/8/2024 16:57'!siteFooter: html	"Draws the standard page footer."	html horizontalRule.	html div class: 'container'; with: [
		html anchor			url: 'http://www.seaside.st';			with: 'Powered by Seaside'.            html div style: 'float: right;'; with: [			html render: 'today: '.	  	      html render: Date today 		].	].! !!MagnetTag class methodsFor: 'site-layout' stamp: 'DJR 8/8/2024 16:15'!siteHeader: html 	html image		height: 64;		width: 64; 		url: 'https://s3.winter-paches.darlur.net/bucket/sigils/2024.6.10..21.01.39-darlur.png'.		html heading: 'Welcome to Magnet Tag'.! !!MagnetTag class methodsFor: 'class initialization' stamp: 'DJR 9/10/2024 16:53'!createSampleSite	"Set up fake metadata for the sample site."	Players := OrderedCollection new 		add: (MTPlayer named: '~zod');		add: (MTPlayer named: '~nec');		add: (MTPlayer named: '~bud');		add: (MTPlayer named: '~wes'); 		yourself.! !!MagnetTag class methodsFor: 'class initialization' stamp: 'DJR 9/9/2024 13:51'!initialize	"self initialize"	WAAdmin register: self asApplicationAt: 'mt'.! !WAComponent subclass: #PlayerListView	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Zax-MagnetTag'!!PlayerListView commentStamp: '<historical>' prior: 0!This will be the root page for the MagnetTag website.!!PlayerListView methodsFor: 'rendering' stamp: 'DJR 9/10/2024 16:56'!model	^ MagnetTag players.! !!PlayerListView methodsFor: 'rendering' stamp: 'DJR 9/10/2024 16:49'!renderContentOn: html	"Render the MagnetTag Player List Page."	MagnetTag siteHeader: html.		html unorderedList: [ self renderPlayersOn: html ].		MagnetTag siteFooter: html.! !!PlayerListView methodsFor: 'rendering' stamp: 'DJR 9/10/2024 16:21'!renderPlayer: aPlayer on: html    html listItem: [ html render: aPlayer ].! !!PlayerListView methodsFor: 'rendering' stamp: 'DJR 9/10/2024 16:21'!renderPlayersOn: html    self model do: [ :p | self renderPlayer: p on: html ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PlayerListView class	instanceVariableNames: ''!!PlayerListView class methodsFor: 'as yet unclassified' stamp: 'DJR 9/9/2024 13:51'!initialize	"self initialize"	WAAdmin register: self asApplicationAt: 'players'.! !WAComponent subclass: #PlayerView	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Zax-MagnetTag'!!PlayerView commentStamp: '<historical>' prior: 0!This will be the root page for the MagnetTag website.!!PlayerView methodsFor: 'rendering' stamp: 'DJR 9/10/2024 16:49'!renderContentOn: html	"Render a MagnetTag Player Page."	MagnetTag siteHeader: html.		html unorderedList: [		html listItem: [ html render: self name ].		html listItem: [ html render: self sheet ]. 	]. 		MagnetTag siteFooter: html.! !MagnetTag initialize!PlayerListView initialize!